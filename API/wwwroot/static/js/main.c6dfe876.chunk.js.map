{"version":3,"sources":["App/api/errors.ts","App/models/pagination.ts","App/api/agent.ts","App/common/utils/utils.ts","App/stores/ActivityStore.ts","App/stores/CommonStore.ts","App/stores/ModalStore.ts","App/stores/ProfileStore.ts","App/stores/UserStore.ts","App/stores/Store.ts","App/stores/CommentStore.ts","Features/nav/NavBar.tsx","Features/profiles/ProfileCard.tsx","Features/activities/dashboard/ActivityListItemAttendees.tsx","Features/activities/dashboard/ActivityListItem.tsx","Features/activities/dashboard/ActivityList.tsx","Features/activities/dashboard/ActivityFilters.tsx","Features/activities/dashboard/ActivityListItemPlaceholder.tsx","Features/activities/dashboard/ActivityDashboard.tsx","App/common/form/TextInput.tsx","Features/user/LoginForm.tsx","App/common/form/ValidationErrors.tsx","Features/user/RegisterForm.tsx","Features/home/LogOutForm.tsx","Features/home/LogInForm.tsx","Features/home/HomePage.tsx","App/models/activity.ts","App/common/form/TextArea.tsx","App/common/form/SelectInput.tsx","App/common/options/categoryOptions.ts","App/common/form/DateInput.tsx","App/layout/LoadingComponent.tsx","Features/activities/form/ActivityForm.tsx","Features/activities/details/ActivityDetailedChat.tsx","Features/activities/details/ActivityDetailedInfo.tsx","Features/activities/details/ActivityDetailedHeader.tsx","Features/activities/details/ActivityDetailedSidebar.tsx","App/layout/NotFound.tsx","Features/buttons/GoToPreviousPageButton.tsx","Features/activities/details/ActivityDetails.tsx","App/common/modals/ModalContainer.tsx","Features/profiles/FollowButton.tsx","Features/profiles/ProfileHeader.tsx","Features/photoUpload/UploadPhotoDropzone.tsx","Features/photoUpload/UploadPhotoCropper.tsx","Features/photoUpload/UploadPhotoWidget.tsx","Features/profiles/ProfilePhotos.tsx","Features/profiles/ProfileFollowings.tsx","Features/profiles/ProfileActivities.tsx","Features/profiles/ProfileContent.tsx","Features/profiles/ProfilePage.tsx","App/common/utils/hooks.ts","Features/user/RegisterSuccess.tsx","Features/user/VerifyEmail.tsx","App/layout/App.tsx","reportWebVitals.ts","App/layout/ScrollToTop.tsx","index.tsx"],"names":["ErrorsHandler","error","message","response","toast","status","history","push","config","method","data","errors","hasOwnProperty","headers","startsWith","window","localStorage","removeItem","info","PaginatedResult","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","token","getItem","Authorization","Promise","reject","a","JSON","parse","er","responseBody","requests","url","get","then","body","post","put","delete","file","formData","FormData","append","Activities","params","id","activity","User","user","accessToken","email","Profiles","username","photo","predicate","setActivityProps","isGoing","attendees","some","userName","isHost","createAttendee","displayedName","mainImage","image","configure","enforceActions","ActivityStore","activitiesRegistry","Map","loadingInitial","submitting","target","loading","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","key","loadActivities","axiosParams","result","runInAction","store","userStore","mapAllActivitiesFromResponse","setPagination","console","log","activities","modifyActivityDate","addActivitiesFromResponseToClientArray","date","Date","loadActivity","getActivity","getUser","createActivity","attendee","editActivity","modifyDayOfTheWeekToString","getDay","modifyMonthToString","getMonth","deleteActivity","event","currentTarget","name","attendActivity","cancelAttendance","filter","cancelActivity","isCancelled","clearActivity","makeAutoObservable","reaction","keys","clear","sortedActivities","slice","sort","b","getTime","Object","entries","reduce","toISOString","split","URLSearchParams","toString","groupActivitiesByDate","Array","from","values","ProfileStore","profile","loadingProfile","uploading","loadingSetMain","loadingDelete","loadingFollow","loadingFollowingsList","followings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","uploadPhoto","photos","isMain","setMainPhoto","find","deletePhoto","updateFollowing","isFollowing","followersCount","loadFollowings","loadUserActivities","UserStore","loadingUser","fbAccessToken","fbLoading","refreshTokenTimeout","login","commonStore","setToken","startRefreshTokenTimer","register","modalStore","closeModal","logout","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","refreshToken","stopRefreshTokenTimer","jwtToken","atob","timeout","exp","now","setTimeout","clearTimeout","activityStore","appLoaded","setAppLoaded","setItem","profileStore","modal","open","openModal","content","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","state","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","NavBar","observer","isLoggedIn","Menu","fixed","inverted","Container","Item","as","Link","to","src","alt","style","marginRight","Fragment","NavLink","Button","basic","colour","position","Image","avatar","spaced","Dropdown","pointing","text","icon","onClick","ProfileCard","Card","Content","Header","Description","str","length","substring","truncate","bio","extra","Icon","ActivityListItemAttendees","List","horizontal","map","Popup","trigger","bordered","size","circular","ActivityListItem","host","x","Segment","Group","Label","attached","color","textAlign","marginBottom","title","moment","format","venue","city","secondary","clearing","description","floated","ActivityList","activitiesByDate","group","sub","divided","ActivityFilters","vertical","width","marginTop","active","has","onChange","ActivityListItemPlaceholder","Placeholder","fluid","minHeight","Line","Paragraph","disabled","ActivityDashboard","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","TextInput","props","useField","field","meta","Form","Field","touched","label","maxLength","LoginForm","initialValues","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","flat","err","i","RegisterForm","validationSchema","Yup","required","isValid","dirty","LogOutForm","columns","relaxed","stackable","verticalAlign","Divider","LogInForm","HomePage","ActivityFormValues","init","undefined","category","assign","TextArea","rows","rowsize","SelectInput","helpers","Select","clearable","options","e","setValue","onBlur","setTouched","categoryOptions","DateInput","selected","LoadingComponent","Dimmer","ActivityForm","useParams","useHistory","setActivity","nullable","cursor","enableReinitialize","newActivity","uuid","placeholderText","showTimeSelect","timeCaption","dateFormat","ActivityDetailedChat","border","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","resetForm","onKeyPress","shiftKey","preventDefault","ActivityDetailedInfo","getDate","activityImageStyle","activityImageTextStyle","bottom","left","height","ActivityDetailedHeader","isMouseOver","setIsMouseOver","padding","zIndex","top","ribbon","onMouseOver","onMouseOut","display","marginLeft","ActivityDetailedSidebar","Extra","NotFound","Inline","GoToPreviousPageButton","ActivityDetails","ModalContainer","Modal","onClose","FollowButton","Reveal","animated","visible","hidden","handleFollow","ProfileHeader","Statistic","widths","followingsCount","dropzoneStyles","borderColor","borderRadius","paddingTop","dropzoneActive","UploadPhotoDropzone","setFiles","onDrop","useCallback","acceptedFiles","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","UploadPhotoCropper","setCropper","imagePreview","initialAspectRatio","guides","viewMode","autoCropArea","background","onInitialized","cropper","UploadPhotoWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","ProfilePhotos","isCurrentUser","addPhotoMode","setAddPhotoMode","setTarget","deleteTarget","setDeleteTarget","Tab","Pane","paddingBottom","itemsPerRow","ProfileFollowings","panes","menuItem","pane","ProfileActivities","menu","onTabChange","activeIndex","handleTabChange","objectFit","Meta","ProfileContent","menuPosition","ProfilePage","match","useQuery","useLocation","search","RegisterSuccess","success","VerifyEmail","Status","setStatus","handleConfirmEmailResend","getBody","withRouter","location","finally","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","children","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.c6dfe876.chunk.js","sourcesContent":["import { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\n\r\nexport const ErrorsHandler = {\r\n  handleNetworkError: (error: AxiosError) =>\r\n    error.message === \"Network Error\" &&\r\n    !error.response &&\r\n    toast.error(\"Network error - make sure API is running\"),\r\n  handle404Error: (response: AxiosResponse) =>\r\n    response.status === 404 && history.push(\"/notfound\"),\r\n  handle400Error: (response: AxiosResponse) =>\r\n    response.status === 400 &&\r\n    response.config.method === \"get\" &&\r\n    response.data.errors.hasOwnProperty(\"id\") &&\r\n    history.push(\"/notfound\"),\r\n  handle500Error: (response: AxiosResponse) =>\r\n    response.status === 500 &&\r\n    toast.error(\"Server error - check the terminal for more info!\"),\r\n  handle401Error: (response: AxiosResponse) => {\r\n    if (\r\n      response.status === 401 &&\r\n      response.headers[\"www-authenticate\"].startsWith(\r\n        'Bearer error=\"invalid_token\"'\r\n      )\r\n    ) {\r\n      window.localStorage.removeItem(\"jwt\");\r\n      history.push(\"/\");\r\n      toast.info(\"Your session has expired, please login again\");\r\n    }\r\n  },\r\n};\r\n","export interface IPagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    data: T;\r\n    pagination: IPagination\r\n\r\n    constructor(data: T, pagination: IPagination) {\r\n        this.data = data;\r\n        this.pagination = pagination;\r\n    }\r\n}\r\n\r\nexport class PagingParams {\r\n    pageNumber;\r\n    pageSize;\r\n\r\n    constructor(pageNumber = 1, pageSize = 2) {\r\n        this.pageNumber = pageNumber;\r\n        this.pageSize = pageSize;\r\n    }\r\n}","import axios, { AxiosResponse } from \"axios\";\r\nimport { IActivity } from \"../models/activity\";\r\nimport { ErrorsHandler } from \"./errors\";\r\nimport { IUser, IUserFormValues } from \"../models/user\";\r\nimport { IPhoto, IProfile, IUserActivity } from \"../models/profile\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = window.localStorage.getItem(\"jwt\");\r\n\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxios.interceptors.response.use(\r\n  async (response) => {\r\n    const pagination = response.headers[\"pagination\"];\r\n    if (pagination) {\r\n      response.data = new PaginatedResult(\r\n        response.data,\r\n        JSON.parse(pagination)\r\n      );\r\n\r\n      return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n\r\n    return response;\r\n  },\r\n  (er) => {\r\n    ErrorsHandler.handleNetworkError(er);\r\n\r\n    ErrorsHandler.handle404Error(er.response);\r\n    ErrorsHandler.handle400Error(er.response);\r\n    ErrorsHandler.handle500Error(er.response);\r\n    ErrorsHandler.handle401Error(er.response);\r\n\r\n    throw er.response;\r\n  }\r\n);\r\n\r\nconst sleep = (ms: number) => (response: AxiosResponse) =>\r\n  new Promise<AxiosResponse>((resolve) =>\r\n    setTimeout(() => resolve(response), ms)\r\n  );\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n  postForm: (url: string, file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append(\"File\", file);\r\n    return axios\r\n      .post(url, formData, {\r\n        headers: { \"Content-type\": \"multipart/form-data\" },\r\n      })\r\n      .then(responseBody);\r\n  },\r\n};\r\n\r\nexport const Activities = {\r\n  list: (params: URLSearchParams) =>\r\n    axios\r\n      .get<PaginatedResult<IActivity[]>>(\"/activities\", { params })\r\n      .then(responseBody),\r\n  details: (id: string): Promise<IActivity> =>\r\n    requests.get<IActivity>(`/activities/${id}`),\r\n  create: (activity: IActivity): Promise<void> =>\r\n    requests.post<void>(\"/activities\", activity),\r\n  update: (activity: IActivity): Promise<void> =>\r\n    requests.put<void>(`/activities/${activity.id}`, activity),\r\n  delete: (id: string): Promise<void> =>\r\n    requests.del<void>(`/activities/${id}`),\r\n  attend: (id: string): Promise<void> =>\r\n    requests.post<void>(`/activities/${id}/attend`, {}),\r\n  unattend: (id: string): Promise<void> =>\r\n    requests.del<void>(`/activities/${id}/attend`),\r\n  cancel: (id: string): Promise<void> =>\r\n    requests.post<void>(`/activities/${id}/cancel`, {}),\r\n};\r\n\r\nexport const User = {\r\n  current: (): Promise<IUser> => requests.get<IUser>(\"/user\"),\r\n  login: (user: IUserFormValues): Promise<IUser> =>\r\n    requests.post<IUser>(\"/user/login\", user),\r\n  register: (user: IUserFormValues): Promise<IUser> =>\r\n    requests.post<IUser>(\"/user/register\", user),\r\n  fbLogin: (accessToken: string) =>\r\n    requests.post<IUser>(`/user/fbLogin?accessToken=${accessToken}`, {}),\r\n  refreshToken: () => requests.post<IUser>(`/user/refreshToken`, {}),\r\n  verifyEmail: (token: string, email: string) =>\r\n    requests.post<void>(`/user/verifyEmail`, { token, email }),\r\n  resendEmailVerification: (email: string) =>\r\n    requests.get(`/user/resendEmailVerification?email=${email}`),\r\n};\r\n\r\nexport const Profiles = {\r\n  get: (username: string): Promise<IProfile> =>\r\n    requests.get<IProfile>(`/profiles/${username}`),\r\n  uploadPhoto: (photo: Blob): Promise<IPhoto> =>\r\n    requests.postForm(\"/photos\", photo),\r\n  setMainPhoto: (id: string): Promise<void> =>\r\n    requests.post<void>(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string): Promise<void> =>\r\n    requests.del<void>(`/photos/${id}`),\r\n  updateFollowing: (username: string) =>\r\n    requests.post(`/follow/${username}`, {}),\r\n  getListOfFollowings: (username: string, predicate: string) =>\r\n    requests.get<IProfile[]>(`/follow/${username}?predicate=${predicate}`),\r\n  getListOfActivities: (username: string, predicate: string) =>\r\n    requests.get<IUserActivity[]>(\r\n      `/profiles/${username}/activities?predicate=${predicate}`\r\n    ),\r\n};\r\n","import { IActivity, IAttendee } from \"../../models/activity\";\r\nimport { IUser } from \"../../models/user\";\r\n\r\nexport const setActivityProps = (activity: IActivity, user: IUser | null) => {\r\n  activity.isGoing = activity.attendees.some(\r\n    (a) => a.userName === user?.userName\r\n  );\r\n  activity.isHost = activity.attendees.some(\r\n    (a) => a.userName === user?.userName && a.isHost\r\n  );\r\n};\r\n\r\nexport const createAttendee = (user: IUser): IAttendee => {\r\n  return {\r\n    displayedName: user.displayedName,\r\n    isHost: false,\r\n    userName: user.userName,\r\n    mainImage: user.image!,\r\n  };\r\n};\r\n","import { makeAutoObservable, configure, runInAction, reaction } from \"mobx\";\r\nimport { SyntheticEvent } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { Activities } from \"../api/agent\";\r\nimport { IActivity } from \"../models/activity\";\r\nimport { IUser } from \"../models/user\";\r\nimport { store } from \"./Store\";\r\nimport { createAttendee, setActivityProps } from \"../common/utils/utils\";\r\nimport { IPagination, PagingParams } from \"../models/pagination\";\r\n\r\nconfigure({ enforceActions: \"always\" });\r\n\r\nexport default class ActivityStore {\r\n  activitiesRegistry = new Map();\r\n  loadingInitial = false;\r\n  activity: IActivity | null = null;\r\n  submitting = false;\r\n  target = \"\";\r\n  loading = false;\r\n  pagination: IPagination | null = null;\r\n  pagingParams = new PagingParams();\r\n  predicate = new Map().set(\"all\", true);\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.pagingParams = new PagingParams();\r\n        this.activitiesRegistry.clear();\r\n        this.loadActivities();\r\n      }\r\n    )\r\n  }\r\n\r\n  setPagingParams = (pagingParams: PagingParams) => {\r\n    this.pagingParams = pagingParams;\r\n  };\r\n\r\n  setPredicate = (predicate: string, value: string | Date) => {\r\n    const resetPredicate = () => {\r\n      this.predicate.forEach((value, key) => {\r\n        if (key !== \"startDate\") this.predicate.delete(key);\r\n      });\r\n    };\r\n    switch (predicate) {\r\n      case \"all\":\r\n        resetPredicate();\r\n        this.predicate.set(\"all\", true);\r\n        break;\r\n      case \"isGoing\":\r\n        resetPredicate();\r\n        this.predicate.set(\"isGoing\", true);\r\n        break;\r\n      case \"isHost\":\r\n        resetPredicate();\r\n        this.predicate.set(\"isHost\", true);\r\n        break;\r\n      case \"startDate\":\r\n        this.predicate.delete(\"startDate\");\r\n        this.predicate.set(\"startDate\", value);\r\n    }\r\n  };\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\r\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\r\n    this.predicate.forEach((value, key) => {\r\n      if (key === \"startDate\") {\r\n        params.append(key, (value as Date).toISOString());\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    });\r\n\r\n    return params;\r\n  }\r\n\r\n  get activitiesByDate() {\r\n    return this.groupActivitiesByDate(\r\n      Array.from(this.activitiesRegistry.values())\r\n    );\r\n  }\r\n\r\n  private groupActivitiesByDate(activities: IActivity[]) {\r\n    const sortedActivities = activities\r\n      .slice()\r\n      .sort((a, b) => a.date!.getTime() - b.date!.getTime());\r\n\r\n    return Object.entries(\r\n      sortedActivities.reduce((activities, activity) => {\r\n        const date = activity.date!.toISOString().split(\"T\")[0];\r\n\r\n        activities[date] = activities[date]\r\n          ? [...activities[date], activity]\r\n          : [activity];\r\n\r\n        return activities;\r\n      }, {} as { [key: string]: IActivity[] })\r\n    );\r\n  }\r\n\r\n  loadActivities = async () => {\r\n    this.loadingInitial = true;\r\n\r\n    try {\r\n      const result = await Activities.list(this.axiosParams);\r\n      runInAction(() => {\r\n        const user = store.userStore.user;\r\n        this.mapAllActivitiesFromResponse(result.data, user);\r\n        this.setPagination(result.pagination);\r\n        this.loadingInitial = false;\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loadingInitial = false;\r\n      });\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  setPagination = (pagination: IPagination) => {\r\n    this.pagination = pagination;\r\n  };\r\n\r\n  private mapAllActivitiesFromResponse = (\r\n    activities: IActivity[],\r\n    user: IUser | null\r\n  ) => {\r\n    activities.forEach((activity) => {\r\n      activity = this.modifyActivityDate(activity);\r\n\r\n      setActivityProps(activity, user);\r\n\r\n      this.addActivitiesFromResponseToClientArray(activity);\r\n    });\r\n  };\r\n\r\n  private modifyActivityDate = (activity: IActivity): IActivity => {\r\n    activity.date = new Date(activity.date!);\r\n\r\n    return activity;\r\n  };\r\n\r\n  loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n\r\n    if (activity) {\r\n      this.activity = activity;\r\n\r\n      return activity;\r\n    } else {\r\n      this.loadingInitial = true;\r\n\r\n      try {\r\n        activity = await Activities.details(id);\r\n        let user = store.userStore.user;\r\n\r\n        if (!user) await store.userStore.getUser();\r\n\r\n        user = store.userStore.user;\r\n\r\n        runInAction(() => {\r\n          activity.date = new Date(activity.date!);\r\n          setActivityProps(activity, user);\r\n          this.activity = activity;\r\n          this.loadingInitial = false;\r\n        });\r\n        return activity;\r\n      } catch (error) {\r\n        runInAction(() => {\r\n          this.loadingInitial = false;\r\n        });\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  private getActivity = (id: string): IActivity => {\r\n    return this.activitiesRegistry.get(id);\r\n  };\r\n\r\n  createActivity = async (activity: IActivity) => {\r\n    this.submitting = true;\r\n\r\n    try {\r\n      await Activities.create(activity);\r\n      const attendee = createAttendee(store.userStore.user!);\r\n      attendee.isHost = true;\r\n      let attendees = [];\r\n      attendees.push(attendee);\r\n      activity.attendees = attendees;\r\n      activity.isHost = true;\r\n      runInAction(() => {\r\n        this.addActivitiesFromResponseToClientArray(activity);\r\n        this.submitting = false;\r\n      });\r\n      history.push(`/activities/${activity.id}`);\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.submitting = false;\r\n      });\r\n      toast.error(\"Problem submitting data\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  editActivity = async (activity: IActivity) => {\r\n    this.submitting = true;\r\n\r\n    try {\r\n      await Activities.update(activity);\r\n      runInAction(() => {\r\n        this.addActivitiesFromResponseToClientArray(activity);\r\n        this.activity = activity;\r\n        this.submitting = false;\r\n      });\r\n      history.push(`/activities/${activity.id}`);\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.submitting = false;\r\n      });\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  private addActivitiesFromResponseToClientArray = (activity: IActivity) => {\r\n    this.activitiesRegistry.set(activity.id, activity);\r\n  };\r\n\r\n  modifyDayOfTheWeekToString = (activity: IActivity) => {\r\n    const days = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ];\r\n\r\n    return days[activity.date!.getDay()];\r\n  };\r\n\r\n  modifyMonthToString = (activity: IActivity) => {\r\n    const months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n\r\n    return months[activity.date!.getMonth()];\r\n  };\r\n\r\n  deleteActivity = async (\r\n    event: SyntheticEvent<HTMLButtonElement>,\r\n    id: string\r\n  ) => {\r\n    this.submitting = true;\r\n    this.target = event.currentTarget.name;\r\n\r\n    try {\r\n      await Activities.delete(id);\r\n      runInAction(() => {\r\n        this.activitiesRegistry.delete(id);\r\n        this.submitting = false;\r\n        this.target = \"\";\r\n        history.push(\"/activities\");\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.submitting = false;\r\n        this.target = \"\";\r\n      });\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  attendActivity = async () => {\r\n    const attendee = createAttendee(store.userStore.user!);\r\n    this.loading = true;\r\n\r\n    try {\r\n      await Activities.attend(this.activity!.id!);\r\n      runInAction(() => {\r\n        if (this.activity) {\r\n          this.activity.attendees.push(attendee);\r\n          this.activity.isGoing = true;\r\n          this.activitiesRegistry.set(this.activity.id, this.activity);\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n      toast.error(\"Problem signing up to activity\");\r\n    }\r\n  };\r\n\r\n  cancelAttendance = async () => {\r\n    this.loading = true;\r\n\r\n    try {\r\n      await Activities.unattend(this.activity!.id!);\r\n      runInAction(() => {\r\n        if (this.activity) {\r\n          this.activity.attendees = this.activity.attendees.filter(\r\n            (a) => a.userName !== store.userStore.user?.userName\r\n          );\r\n\r\n          this.activity.isGoing = false;\r\n          this.activitiesRegistry.set(this.activity.id, this.activity);\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n      toast.error(\"Problem cancelling attendance\");\r\n    }\r\n  };\r\n\r\n  cancelActivity = async (event: SyntheticEvent<HTMLButtonElement>) => {\r\n    this.submitting = true;\r\n    this.target = event.currentTarget.name;\r\n\r\n    try {\r\n      await Activities.cancel(this.activity!.id!);\r\n      runInAction(() => {\r\n        this.activity!.isCancelled = !this.activity?.isCancelled;\r\n        this.activitiesRegistry.set(this.activity!.id, this.activity);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => (this.submitting = false));\r\n    }\r\n  };\r\n\r\n  clearActivity = () => {\r\n    this.activity = null;\r\n  };\r\n}\r\n","import { makeAutoObservable, configure, reaction } from \"mobx\"\r\n\r\nconfigure({ enforceActions: \"always\" });\r\n\r\nexport default class CommonStore {    \r\n    token: string | null = window.localStorage.getItem('jwt');\r\n    appLoaded = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.token,\r\n            token => {\r\n                if (token) {\r\n                    window.localStorage.setItem('jwt', token);\r\n                } else {\r\n                    window.localStorage.removeItem('jwt');\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setToken = (token: string | null) => {\r\n        this.token = token;\r\n    }\r\n\r\n    setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n}","import { makeAutoObservable, configure } from \"mobx\"\r\n\r\nconfigure({ enforceActions: \"always\" });\r\n\r\ninterface Modal {\r\n    open: boolean,\r\n    body: JSX.Element | null,\r\n}\r\n\r\nexport default class ModalStore {\r\n    modal: Modal = {\r\n        open: false,\r\n        body: null\r\n    }\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    openModal = (content: JSX.Element) => {\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n\r\n}","import { makeAutoObservable, configure, runInAction, reaction } from \"mobx\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Profiles } from \"../api/agent\";\r\nimport { IPhoto, IProfile, IUserActivity } from \"../models/profile\";\r\nimport { store } from \"./Store\";\r\n\r\nconfigure({ enforceActions: \"always\" });\r\n\r\nexport default class ProfileStore {\r\n  profile: IProfile | null = null;\r\n  loadingProfile = false;\r\n  uploading = false;\r\n  loadingSetMain = false;\r\n  loadingDelete = false;\r\n  loadingFollow = false;\r\n  loadingFollowingsList = false;\r\n  followings: IProfile[] = [];\r\n  activeTab = 0;\r\n  userActivities: IUserActivity[] = [];\r\n  loadingActivities = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      (activeTab) => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setActiveTab = (activeTab: any) => {\r\n    this.activeTab = activeTab;\r\n  };\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.userName === this.profile.userName;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n\r\n    try {\r\n      const profile = await Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loadingProfile = false;\r\n      });\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.uploading = true;\r\n\r\n    try {\r\n      const photo = await Profiles.uploadPhoto(file);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos.push(photo);\r\n\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.user.image = photo.url;\r\n            this.profile.mainImage = photo.url;\r\n          }\r\n        }\r\n        this.uploading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(\"Problem uploading photo\");\r\n      runInAction(() => {\r\n        this.uploading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  setMainPhoto = async (photo: IPhoto) => {\r\n    this.loadingSetMain = true;\r\n\r\n    try {\r\n      await Profiles.setMainPhoto(photo.id);\r\n      runInAction(() => {\r\n        store.userStore.user!.image = photo.url;\r\n        this.profile!.photos.find((a) => a.isMain)!.isMain = false;\r\n        this.profile!.photos.find((a) => a.id === photo.id)!.isMain = true;\r\n        this.profile!.mainImage = photo.url;\r\n        this.loadingSetMain = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(\"Problem setting photo as main\");\r\n      runInAction(() => {\r\n        this.loadingSetMain = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  deletePhoto = async (photo: IPhoto) => {\r\n    this.loadingDelete = true;\r\n\r\n    try {\r\n      await Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        this.profile!.photos = this.profile!.photos.filter(\r\n          (a) => a.id !== photo.id\r\n        );\r\n        this.loadingDelete = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem deleting the photo\");\r\n      runInAction(() => {\r\n        this.loadingDelete = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateFollowing = async (username: string, isFollowing: boolean) => {\r\n    this.loadingFollow = true;\r\n\r\n    try {\r\n      await Profiles.updateFollowing(username);\r\n      runInAction(() => {\r\n        if (\r\n          this.profile &&\r\n          this.profile.userName !== store.userStore.user?.userName\r\n        ) {\r\n          isFollowing\r\n            ? this.profile.followersCount++\r\n            : this.profile.followersCount--;\r\n          this.profile.isFollowing = !this.profile.isFollowing;\r\n        }\r\n        this.followings.forEach((profile) => {\r\n          if (profile.userName === username) {\r\n            profile.isFollowing\r\n              ? profile.followersCount--\r\n              : profile.followersCount++;\r\n            profile.isFollowing = !profile.isFollowing;\r\n          }\r\n        });\r\n        this.loadingFollow = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingFollow = false));\r\n    }\r\n  };\r\n\r\n  loadFollowings = async (predicate: string) => {\r\n    this.loadingFollowingsList = true;\r\n\r\n    try {\r\n      const followings = await Profiles.getListOfFollowings(\r\n        this.profile!.userName,\r\n        predicate\r\n      );\r\n\r\n      runInAction(() => {\r\n        this.followings = followings;\r\n        this.loadingFollowingsList = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingFollowingsList = false));\r\n    }\r\n  };\r\n\r\n  loadUserActivities = async (username: string, predicate?: string) => {\r\n    this.loadingActivities = true;\r\n\r\n    try {\r\n      const activities = await Profiles.getListOfActivities(username, predicate!);\r\n      runInAction(() => {\r\n        this.userActivities = activities;\r\n        this.loadingActivities = false;\r\n      })\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingActivities = false;\r\n      })\r\n    }\r\n  }\r\n}\r\n","import { makeAutoObservable, configure, runInAction } from \"mobx\";\r\nimport { IUser, IUserFormValues } from \"../models/user\";\r\nimport { User } from \"../api/agent\";\r\nimport { history } from \"../..\";\r\nimport { store } from \"./Store\";\r\n\r\nconfigure({ enforceActions: \"always\" });\r\n\r\nexport default class UserStore {\r\n  user: IUser | null = null;\r\n  loadingUser = false;\r\n  fbAccessToken: string | null = null;\r\n  fbLoading = false;\r\n  refreshTokenTimeout: any;\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  login = async (values: IUserFormValues) => {\r\n    try {\r\n      const user = await User.login(values);\r\n      runInAction(() => {\r\n        this.user = user;\r\n      });\r\n      store.commonStore.setToken(user.token);\r\n      this.startRefreshTokenTimer(user);\r\n      history.push(\"/activities\");\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  register = async (values: IUserFormValues) => {\r\n    try {\r\n      await User.register(values);\r\n      store.modalStore.closeModal();\r\n      history.push(`/user/registerSuccess?email=${values.email}`);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  getUser = async () => {\r\n    this.loadingUser = true;\r\n\r\n    try {\r\n      const user = await User.current();\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => {\r\n        this.user = user;\r\n      });\r\n      this.startRefreshTokenTimer(user);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => (this.loadingUser = false));\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    window.localStorage.removeItem(\"jwt\");\r\n    this.user = null;\r\n    history.push(\"/\");\r\n  };\r\n\r\n  getFacebookLoginStatus = async () => {\r\n    window.FB.getLoginStatus((response) => {\r\n      if (response.status === \"connected\") {\r\n        this.fbAccessToken = response.authResponse.accessToken;\r\n      }\r\n    });\r\n  };\r\n\r\n  facebookLogin = () => {\r\n    this.fbLoading = true;\r\n    const apiLogin = (accessToken: string) => {\r\n      User.fbLogin(accessToken)\r\n        .then((user) => {\r\n          store.commonStore.setToken(user.token);\r\n          this.startRefreshTokenTimer(user);\r\n          runInAction(() => {\r\n            this.user = user;\r\n            this.fbLoading = false;\r\n          });\r\n          history.push(\"/activities\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          runInAction(() => (this.fbLoading = false));\r\n        });\r\n    };\r\n\r\n    if (this.fbAccessToken) {\r\n      apiLogin(this.fbAccessToken);\r\n    } else {\r\n      window.FB.login(\r\n        (response) => {\r\n          apiLogin(response.authResponse.accessToken);\r\n        },\r\n        {\r\n          scope: \"public_profile,email\",\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  refreshToken = async () => {\r\n    this.stopRefreshTokenTimer();\r\n    try {\r\n      const user = await User.refreshToken();\r\n      runInAction(() => {\r\n        this.user = user;\r\n      });\r\n      store.commonStore.setToken(user.token);\r\n      this.startRefreshTokenTimer(user);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  private startRefreshTokenTimer(user: IUser) {\r\n    const jwtToken = JSON.parse(atob(user.token.split(\".\")[1]));\r\n    const expires = new Date(jwtToken.exp * 1000);\r\n    const timeout = expires.getTime() - Date.now() - 30 * 1000;\r\n    this.refreshTokenTimeout = setTimeout(this.refreshToken, timeout);\r\n  }\r\n\r\n  private stopRefreshTokenTimer() {\r\n    clearTimeout(this.refreshTokenTimeout);\r\n  }\r\n}\r\n","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./ActivityStore\";\r\nimport CommonStore from \"./CommonStore\";\r\nimport ModalStore from \"./ModalStore\";\r\nimport ProfileStore from \"./ProfileStore\";\r\nimport UserStore from \"./UserStore\";\r\nimport CommentStore from \"./CommentStore\"\r\n\r\ninterface Store {\r\n    activityStore: ActivityStore;\r\n    commonStore: CommonStore;\r\n    userStore: UserStore;\r\n    profileStore: ProfileStore;\r\n    modalStore: ModalStore;\r\n    commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n    activityStore: new ActivityStore(),\r\n    commonStore: new CommonStore(),\r\n    userStore: new UserStore(),\r\n    profileStore: new ProfileStore(),\r\n    modalStore: new ModalStore(),\r\n    commentStore: new CommentStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n    return useContext(StoreContext);\r\n}","import { IComment } from \"../models/commets\";\r\nimport {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  LogLevel,\r\n} from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { store } from \"./Store\";\r\n\r\nexport default class CommentStore {\r\n  comments: IComment[] = [];\r\n  hubConnection: HubConnection | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  createHubConnection = (activityId: string) => {\r\n    if (store.activityStore.activity) {\r\n      this.hubConnection = new HubConnectionBuilder()\r\n        .withUrl(process.env.REACT_APP_API_URL + \"?activityId=\" + activityId, {\r\n          accessTokenFactory: () => store.commonStore.token!,\r\n        })\r\n        .withAutomaticReconnect()\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n\r\n      this.hubConnection\r\n        .start()\r\n        .then(() => console.log(this.hubConnection!.state))\r\n        .catch((error) =>\r\n          console.log(\"Error establishinh connection: \", error)\r\n        );\r\n\r\n      this.hubConnection.on(\"LoadComments\", (comments: IComment[]) => {\r\n        runInAction(() => {\r\n          comments.forEach((comment) => {\r\n            comment.createdAt = new Date(comment.createdAt);\r\n          });\r\n          this.comments = comments;\r\n        });\r\n      });\r\n\r\n      this.hubConnection.on(\"RecieveComment\", (comment: IComment) => {\r\n        runInAction(() => {\r\n          comment.createdAt = new Date(comment.createdAt);\r\n          this.comments.unshift(comment);\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  stopHubConnection = () => {\r\n    this.hubConnection!.stop().catch((error) =>\r\n      console.log(\"Error stopping connection: \", error)\r\n    );\r\n  };\r\n\r\n  clearComments = () => {\r\n    this.comments = [];\r\n    this.stopHubConnection();\r\n  };\r\n\r\n  addComment = async (values: any) => {\r\n    values.activityId = store.activityStore.activity?.id;\r\n\r\n    try {\r\n      await this.hubConnection?.invoke(\"SendComment\", values);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { Menu, Container, Button, Image, Dropdown } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../App/stores/Store\";\r\n\r\nexport const NavBar: React.FC = observer(() => {\r\n  const { userStore } = useStore();\r\n  const { isLoggedIn, user, logout } = userStore;\r\n  return (\r\n    <Menu fixed=\"top\" inverted>\r\n      <Container>\r\n        <Menu.Item as={Link} to=\"/\">\r\n          <img\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginRight: \"10px\" }}\r\n          />\r\n          InTouch\r\n        </Menu.Item>\r\n        {isLoggedIn && user && (\r\n          <React.Fragment>\r\n            <Menu.Item name=\"Activities\" as={NavLink} to=\"/activities\" />\r\n            <Menu.Item>\r\n              <Button\r\n                as={NavLink}\r\n                to=\"/createActivity\"\r\n                basic\r\n                inverted\r\n                colour=\"gray\"\r\n                content=\"Create Activity\"\r\n              />\r\n            </Menu.Item>\r\n            <Menu.Item position=\"right\">\r\n              <Image\r\n                avatar\r\n                spaced=\"right\"\r\n                src={user?.image || \"/assets/user.jpg\"}\r\n              />\r\n              <Dropdown pointing=\"top left\" text={user.displayedName}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    as={Link}\r\n                    to={`/profile/${user.userName}`}\r\n                    text=\"My profile\"\r\n                    icon=\"user\"\r\n                  />\r\n                  <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Menu.Item>\r\n          </React.Fragment>\r\n        )}\r\n      </Container>\r\n    </Menu>\r\n  );\r\n});\r\n","import { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { IAttendee } from \"../../App/models/activity\";\r\nimport { IProfile } from \"../../App/models/profile\";\r\n\r\ninterface IProps {\r\n  profile: IAttendee | IProfile;\r\n}\r\n\r\nexport const ProfileCard: React.FC<IProps> = ({ profile }) => {\r\n  const truncate = (str: string | undefined) => {\r\n    if (str) {\r\n      return str.length > 40 ? str.substring(0, 37) + \"...\" : str;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card as={Link} to={`/profile/${profile.userName}`}>\r\n      <Image src={profile?.mainImage || \"/assets/user.jpg\"} />\r\n      <Card.Content>\r\n        <Card.Header>{profile?.displayedName}</Card.Header>\r\n        <Card.Description>{truncate(profile?.bio)}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile?.followersCount} followers\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { List, Image, Popup } from \"semantic-ui-react\";\r\nimport { IAttendee } from \"../../../App/models/activity\";\r\nimport { ProfileCard } from \"../../profiles/ProfileCard\";\r\n\r\ninterface IProps {\r\n  attendees: IAttendee[];\r\n}\r\n\r\nexport const ActivityListItemAttendees: React.FC<IProps> = ({ attendees }) => {\r\n  return (\r\n    <List horizontal>\r\n      {attendees?.map((attendee) => (\r\n        <List.Item key={attendee.userName}>\r\n          <Popup\r\n            trigger={\r\n              <Image\r\n                as={Link}\r\n                to={`/profile/${attendee.userName}`}\r\n                bordered\r\n                size=\"mini\"\r\n                circular\r\n                src={attendee.mainImage || \"/assets/user.jpg\"}\r\n              />\r\n            }\r\n          >\r\n            <Popup.Content>\r\n              <ProfileCard profile={attendee} />\r\n            </Popup.Content>\r\n          </Popup>\r\n        </List.Item>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Item,\r\n  Icon,\r\n  Segment,\r\n  Label,\r\n} from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../App/models/activity\";\r\nimport moment from \"moment\";\r\nimport { ActivityListItemAttendees } from \"./ActivityListItemAttendees\";\r\n\r\ninterface IProps {\r\n  activity: IActivity;\r\n}\r\n\r\nexport const ActivityListItem: React.FC<IProps> = observer(({ activity }) => {\r\n  const host = activity.attendees.filter((x) => x.isHost)[0];\r\n  return (\r\n    <Segment.Group>\r\n      {activity.isCancelled && (\r\n        <Label\r\n          attached=\"top\"\r\n          color=\"red\"\r\n          content=\"Cancelled\"\r\n          style={{ textAlign: \"center\" }}\r\n        />\r\n      )}\r\n      <Segment>\r\n        <Item.Group>\r\n          <Item key={activity.id}>\r\n            <Item.Image\r\n              size=\"tiny\"\r\n              circular\r\n              src={host.mainImage || \"/assets/user.jpg\"}\r\n              style={{ marginBottom: 3 }}\r\n            />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                Hosted by{\" \"}\r\n                <Link to={`/profile/${host.userName}`}>\r\n                  {\" \"}\r\n                  {host.displayedName}\r\n                </Link>\r\n              </Item.Description>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label\r\n                    basic\r\n                    color=\"teal\"\r\n                    content=\"You are hosting this activity\"\r\n                  />\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label\r\n                    basic\r\n                    color=\"black\"\r\n                    content=\"You are going to this activity\"\r\n                  />\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <Icon name=\"clock\" />\r\n        <span style={{ marginRight: \"10px\" }}>\r\n          {moment(activity.date).format(\"LT\")}\r\n        </span>\r\n        <Icon name=\"marker\" /> {activity.venue}, {activity.city}\r\n      </Segment>\r\n      <Segment secondary>\r\n        <ActivityListItemAttendees attendees={activity.attendees} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          floated=\"right\"\r\n          content=\"View\"\r\n          secondary\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Header, Item } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../App/models/activity\";\r\nimport { useStore } from \"../../../App/stores/Store\";\r\nimport { ActivityListItem } from \"./ActivityListItem\";\r\n\r\nexport const ActivityList: React.FC = observer(() => {\r\n  const { activityStore } = useStore();\r\n  return (\r\n    <React.Fragment>\r\n      {activityStore.activitiesByDate.map(([group, activities]) => (\r\n        <React.Fragment key={group}>\r\n          <Header sub color=\"black\">\r\n            {group}\r\n          </Header>\r\n          <Item.Group divided>\r\n            {activities.map((activity: IActivity) => (\r\n              <ActivityListItem key={activity.id} activity={activity} />\r\n            ))}\r\n          </Item.Group>\r\n        </React.Fragment>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"../../../App/stores/Store\";\r\n\r\nexport const ActivityFilters = observer(() => {\r\n  const {\r\n    activityStore: { predicate, setPredicate },\r\n  } = useStore();\r\n  return (\r\n    <React.Fragment>\r\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 35 }}>\r\n        <Header icon=\"filter\" attached content=\"Filters\" color=\"black\" />\r\n        <Menu.Item\r\n          content=\"All Activities\"\r\n          active={predicate.has(\"all\")}\r\n          onClick={() => setPredicate(\"all\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm going\"\r\n          active={predicate.has(\"isGoing\")}\r\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm hosting\"\r\n          active={predicate.has(\"isHost\")}\r\n          onClick={() => setPredicate(\"isHost\", \"true\")}\r\n        />\r\n      </Menu>\r\n      <Header />\r\n      <Calendar\r\n        onChange={(date) => setPredicate(\"startDate\", date as Date)}\r\n        value={predicate.get(\"startDate\") || new Date()}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n});\r\n","import React, { Fragment } from \"react\";\r\nimport { Segment, Button, Placeholder } from \"semantic-ui-react\";\r\n\r\nexport const ActivityListItemPlaceholder = () => {\r\n  return (\r\n    <Fragment>\r\n      <Placeholder fluid style={{ marginTop: 25 }}>\r\n        <Segment.Group>\r\n          <Segment style={{ minHeight: 110 }}>\r\n            <Placeholder>\r\n              <Placeholder.Header image>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment secondary style={{ minHeight: 70 }} />\r\n          <Segment clearing>\r\n            <Button disabled color=\"black\" floated=\"right\" content=\"View\" />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport { ActivityList } from \"./ActivityList\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"../../../App/stores/Store\";\r\nimport { ActivityFilters } from \"./ActivityFilters\";\r\nimport { PagingParams } from \"../../../App/models/pagination\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { ActivityListItemPlaceholder } from \"./ActivityListItemPlaceholder\";\r\n\r\nexport const ActivityDashboard: React.FC = observer(() => {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    loadActivities,\r\n    activitiesRegistry,\r\n    setPagingParams,\r\n    pagination,\r\n    loadingInitial,\r\n  } = activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  const handleGetNext = () => {\r\n    setLoadingNext(true);\r\n    if (pagination) {\r\n      setPagingParams(new PagingParams(pagination.currentPage + 1));\r\n    }\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (activitiesRegistry.size <= 1) loadActivities();\r\n  }, [activitiesRegistry.size, loadActivities]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        {loadingInitial && !loadingNext ? (\r\n          <React.Fragment>\r\n            <ActivityListItemPlaceholder />\r\n            <ActivityListItemPlaceholder />\r\n          </React.Fragment>\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={\r\n              !loadingNext &&\r\n              !!pagination &&\r\n              pagination.currentPage < pagination.totalPages\r\n            }\r\n            initialLoad={false}\r\n          >\r\n            <ActivityList />\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { useField } from \"formik\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface IProps {\r\n  placeholder: string;\r\n  name: string;\r\n  type?: string;\r\n  label?: string;\r\n}\r\n\r\nexport const TextInput: React.FC<IProps> = (props) => {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input maxLength={200} {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n};\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { Button, Header, Icon, Label, Segment } from \"semantic-ui-react\";\r\nimport { TextInput } from \"../../App/common/form/TextInput\";\r\nimport { useStore } from \"../../App/stores/Store\";\r\n\r\nexport const LoginForm = () => {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Segment clearing>\r\n      <Header as=\"h4\" color=\"black\">\r\n        <Icon size=\"mini\" name=\"users\" />\r\n        Login To Activities\r\n      </Header>\r\n      <Formik\r\n        initialValues={{ email: \"\", password: \"\", error: null }}\r\n        onSubmit={(values, { setErrors }) =>\r\n          userStore\r\n            .login(values)\r\n            .catch((error) => setErrors({ error: \"Invalid email or password\" }))\r\n        }\r\n      >\r\n        {({ handleSubmit, isSubmitting, errors }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <TextInput name=\"email\" placeholder=\"Email\" />\r\n            <TextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n            <ErrorMessage\r\n              name=\"error\"\r\n              render={() => (\r\n                <Label\r\n                  style={{ marginBottom: 10 }}\r\n                  color=\"red\"\r\n                  content={errors.error}\r\n                />\r\n              )}\r\n            />\r\n            <Button\r\n              loading={isSubmitting}\r\n              secondary\r\n              content=\"Login\"\r\n              type=\"submit\"\r\n              fluid\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface IProps {\r\n  errors: any;\r\n}\r\n\r\nexport const ValidationErrors: React.FC<IProps> = ({ errors }) => {\r\n  return (\r\n    <Message error>\r\n      {errors.data && Object.keys(errors.data.errors).length > 0 && (\r\n        <Message.List>\r\n          {Object.values(errors.data.errors)\r\n            .flat()\r\n            .map((err: any, i) => (\r\n              <Message.Item key={i}>{err}</Message.Item>\r\n            ))}\r\n        </Message.List>\r\n      )}\r\n    </Message>\r\n  );\r\n};\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\nimport { TextInput } from \"../../App/common/form/TextInput\";\r\nimport { useStore } from \"../../App/stores/Store\";\r\nimport * as Yup from \"yup\";\r\nimport { ValidationErrors } from \"../../App/common/form/ValidationErrors\";\r\n\r\nexport const RegisterForm = observer(() => {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Segment clearing>\r\n      <Header as=\"h4\" color=\"black\">\r\n        <Icon size=\"mini\" name=\"users\" />\r\n        Hey there! Ready to go?\r\n      </Header>\r\n      <Formik\r\n        initialValues={{\r\n          displayedName: \"\",\r\n          userName: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          error: null,\r\n        }}\r\n        onSubmit={(values, { setErrors }) =>\r\n          userStore.register(values).catch((error) => setErrors({ error }))\r\n        }\r\n        validationSchema={Yup.object({\r\n          displayedName: Yup.string().required(),\r\n          userName: Yup.string().required(),\r\n          email: Yup.string().required().email(),\r\n          password: Yup.string().required(),\r\n        })}\r\n      >\r\n        {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n          <Form\r\n            className=\"ui form error\"\r\n            onSubmit={handleSubmit}\r\n            autoComplete=\"off\"\r\n          >\r\n            <TextInput name=\"displayedName\" placeholder=\"Display Name\" />\r\n            <TextInput name=\"userName\" placeholder=\"Username\" />\r\n            <TextInput name=\"email\" placeholder=\"Email\" />\r\n            <TextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n            <ErrorMessage\r\n              name=\"error\"\r\n              render={() => <ValidationErrors errors={errors.error} />}\r\n            />\r\n            <Button\r\n              disabled={!isValid || !dirty || isSubmitting}\r\n              loading={isSubmitting}\r\n              secondary\r\n              content=\"Register\"\r\n              type=\"submit\"\r\n              fluid\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n});\r\n","import { Fragment } from \"react\";\r\nimport {\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport { LoginForm } from \"../../Features/user/LoginForm\";\r\nimport { RegisterForm } from \"../../Features/user/RegisterForm\";\r\nimport { useStore } from \"../../App/stores/Store\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nexport const LogOutForm = observer(() => {\r\n  const { modalStore, userStore } = useStore();\r\n  const { openModal } = modalStore;\r\n  return (\r\n    <Fragment>\r\n      <Header color=\"black\" as=\"h3\" content=\"Wanna try something new?\" />\r\n      <Segment placeholder>\r\n        <Grid columns={2} relaxed=\"very\" stackable>\r\n          <Grid.Column>\r\n            <LoginForm />\r\n          </Grid.Column>\r\n\r\n          <Grid.Column verticalAlign=\"middle\">\r\n            <Button\r\n              style={{ marginBottom: \"10px\" }}\r\n              onClick={() => openModal(<RegisterForm />)}\r\n              content=\"Sign up\"\r\n              icon=\"signup\"\r\n              size=\"big\"\r\n            />\r\n            <Button\r\n              color=\"facebook\"\r\n              icon\r\n              circular\r\n              loading={userStore.fbLoading}\r\n              onClick={userStore.facebookLogin}\r\n            >\r\n              <Icon name=\"facebook\" /> Use Facebook\r\n            </Button>\r\n          </Grid.Column>\r\n        </Grid>\r\n\r\n        <Divider vertical>Or</Divider>\r\n      </Segment>\r\n    </Fragment>\r\n  );\r\n});\r\n","import React, { Fragment } from \"react\";\r\nimport { Button, Header, Icon } from \"semantic-ui-react\";\r\nimport { IUser } from \"../../App/models/user\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface IProps {\r\n  user: IUser;\r\n}\r\n\r\nexport const LogInForm: React.FC<IProps> = ({ user }) => {\r\n  return (\r\n    <Fragment>\r\n      <Header as=\"h2\" color=\"black\">\r\n        <Icon name=\"users\" />\r\n      </Header>\r\n      <Header\r\n        color=\"black\"\r\n        as=\"h2\"\r\n        content={`Welcome to Activities, ${user?.displayedName}`}\r\n      />\r\n      <Header color=\"black\" as=\"h2\" content=\"Bring people together\" />\r\n      <Button color=\"black\" as={Link} to=\"/activities\" size=\"huge\">\r\n        Let's get it started\r\n      </Button>\r\n    </Fragment>\r\n  );\r\n};\r\n","import { Fragment } from \"react\";\r\nimport { Container, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../App/stores/Store\";\r\nimport { LogOutForm } from \"./LogOutForm\";\r\nimport { LogInForm } from \"./LogInForm\";\r\n\r\nexport const HomePage = () => {\r\n  const { userStore } = useStore();\r\n  const { isLoggedIn, user } = userStore;\r\n  return (\r\n    <Fragment>\r\n      <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n        <Container text>\r\n          {isLoggedIn && user ? <LogInForm user={user} /> : <LogOutForm />}\r\n        </Container>\r\n      </Segment>\r\n    </Fragment>\r\n  );\r\n};\r\n","export interface IActivity {\r\n  id?: string;\r\n  title: string;\r\n  description: string;\r\n  category: string;\r\n  date?: Date;\r\n  city: string;\r\n  venue: string;\r\n  isGoing: boolean;\r\n  isHost: boolean;\r\n  isCancelled: boolean;\r\n  attendees: IAttendee[];\r\n}\r\n\r\ninterface IActivityFormValues extends Partial<IActivity> {}\r\n\r\nexport class ActivityFormValues implements IActivityFormValues {\r\n  id?: string = undefined;\r\n  title: string = \"\";\r\n  description: string = \"\";\r\n  category: string = \"\";\r\n  date?: Date = undefined;\r\n  city: string = \"\";\r\n  venue: string = \"\";\r\n  isGoing: boolean = false;\r\n  isHost: boolean = false;\r\n  isCancelled: boolean = false;\r\n  attendees: IAttendee[] = [];\r\n\r\n  constructor(init?: IActivity) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport interface IAttendee {\r\n  userName: string;\r\n  displayedName: string;\r\n  followersCount?: number;\r\n  followingCount?: number;\r\n  isFollowing?: boolean;\r\n  isHost: boolean;\r\n  mainImage?: string;\r\n  bio?: string;\r\n}\r\n","import React from \"react\";\r\nimport { useField } from \"formik\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface IProps {\r\n  placeholder: string;\r\n  name: string;\r\n  label?: string;\r\n  rowsize: number;\r\n}\r\n\r\nexport const TextArea: React.FC<IProps> = (props) => {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea rows={props.rowsize} {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useField } from \"formik\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface IProps {\r\n  placeholder: string;\r\n  name: string;\r\n  options: any;\r\n  label?: string;\r\n}\r\n\r\nexport const SelectInput: React.FC<IProps> = (props) => {\r\n  const [field, meta, helpers] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(e, data) => helpers.setValue(data.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n};\r\n","export const categoryOptions = [\r\n    { key: 'drinks', text: 'Drinks', value: 'drinks' },\r\n    { key: 'culture', text: 'Culture', value: 'culture' },\r\n    { key: 'film', text: 'Film', value: 'film' },\r\n    { key: 'food', text: 'Food', value: 'food' },\r\n    { key: 'music', text: 'Music', value: 'music' },\r\n    { key: 'travel', text: 'Travel', value: 'travel' }\r\n  ];\r\n  ","import React from \"react\";\r\nimport { useField } from \"formik\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\r\n\r\nexport const DateInput: React.FC<Partial<ReactDatePickerProps>> = (props) => {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={(value) => helpers.setValue(value)}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Loader, Dimmer } from \"semantic-ui-react\";\r\n\r\nexport const LoadingComponent = () => {\r\n  return (\r\n    <Dimmer active inverted={true}>\r\n      <Loader />\r\n    </Dimmer>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Segment, Button, Icon, Grid, Header } from \"semantic-ui-react\";\r\nimport { ActivityFormValues, IActivity } from \"../../../App/models/activity\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { useStore } from \"../../../App/stores/Store\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { TextInput } from \"../../../App/common/form/TextInput\";\r\nimport { TextArea } from \"../../../App/common/form/TextArea\";\r\nimport { SelectInput } from \"../../../App/common/form/SelectInput\";\r\nimport { categoryOptions } from \"../../../App/common/options/categoryOptions\";\r\nimport { DateInput } from \"../../../App/common/form/DateInput\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { LoadingComponent } from \"../../../App/layout/LoadingComponent\";\r\n\r\nexport const ActivityForm: React.FC = observer(() => {\r\n  const { activityStore } = useStore();\r\n  const { loadActivity, loadingInitial, submitting } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n  const history = useHistory();\r\n\r\n  const [activity, setActivity] = useState(new ActivityFormValues());\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required(\"The activity title is required\"),\r\n    description: Yup.string().required(\"The activity description is required\"),\r\n    category: Yup.string().required(),\r\n    date: Yup.string().required().nullable(),\r\n    venue: Yup.string().required(),\r\n    city: Yup.string().required(),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      loadActivity(id).then((activity) =>\r\n        setActivity(new ActivityFormValues(activity))\r\n      );\r\n    }\r\n  }, [loadActivity, id]);\r\n\r\n  const handleSubmit = (values: IActivity) => {\r\n    if (!activity.id) {\r\n      let newActivity = {\r\n        ...values,\r\n        id: uuid(),\r\n      };\r\n      activityStore.createActivity(newActivity);\r\n    } else {\r\n      activityStore.editActivity(values);\r\n    }\r\n  };\r\n\r\n  const redirectFromForm = () => {\r\n    !activity.id\r\n      ? history.push(\"/activities\")\r\n      : history.push(`/activities/${activity.id}`);\r\n  };\r\n\r\n  if (loadingInitial) return <LoadingComponent />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <React.Fragment>\r\n          <Icon\r\n            onClick={redirectFromForm}\r\n            name=\"arrow alternate circle left outline\"\r\n            size=\"big\"\r\n            style={{ marginBottom: \"10px\", cursor: \"pointer\" }}\r\n          />\r\n          <Segment clearing>\r\n            <Header\r\n              content=\"Activity Details\"\r\n              sub\r\n              color=\"black\"\r\n              style={{ marginBottom: \"10px\" }}\r\n            />\r\n            <Formik\r\n              validationSchema={validationSchema}\r\n              enableReinitialize\r\n              initialValues={activity}\r\n              onSubmit={(values) => handleSubmit(values)}\r\n            >\r\n              {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n                <Form\r\n                  onSubmit={handleSubmit}\r\n                  autoComplete=\"off\"\r\n                  className=\"ui form\"\r\n                >\r\n                  <TextInput name=\"title\" placeholder=\"Title\" />\r\n                  <TextArea\r\n                    rowsize={4}\r\n                    name=\"description\"\r\n                    placeholder=\"Description\"\r\n                  />\r\n                  <SelectInput\r\n                    name=\"category\"\r\n                    placeholder=\"Category\"\r\n                    options={categoryOptions}\r\n                  />\r\n                  <DateInput\r\n                    name=\"date\"\r\n                    placeholderText=\"Date\"\r\n                    showTimeSelect\r\n                    timeCaption=\"time\"\r\n                    dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                  />\r\n                  <Header\r\n                    content=\"Location Details\"\r\n                    sub\r\n                    color=\"black\"\r\n                    style={{ marginBottom: \"10px\" }}\r\n                  />\r\n                  <TextInput name=\"city\" placeholder=\"City\" />\r\n                  <TextInput name=\"venue\" placeholder=\"Venue\" />\r\n                  <Button\r\n                    disabled={isSubmitting || !dirty || !isValid}\r\n                    loading={submitting}\r\n                    floated=\"right\"\r\n                    type=\"submit\"\r\n                    secondary\r\n                    content=\"Submit\"\r\n                  />\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </Segment>\r\n        </React.Fragment>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { Fragment, useEffect } from \"react\";\r\nimport { Comment, Icon, Loader, Segment } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"../../../App/stores/Store\";\r\nimport { Formik, Form, Field, FieldProps } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\n\r\ninterface IProps {\r\n  activityId: string;\r\n}\r\n\r\nexport const ActivityDetailedChat: React.FC<IProps> = observer(\r\n  ({ activityId }) => {\r\n    const { commentStore } = useStore();\r\n    const {\r\n      createHubConnection,\r\n      clearComments,\r\n      comments,\r\n      addComment,\r\n    } = commentStore;\r\n\r\n    useEffect(() => {\r\n      if (activityId) {\r\n        createHubConnection(activityId);\r\n      }\r\n\r\n      return () => {\r\n        clearComments();\r\n      };\r\n    }, [createHubConnection, clearComments, activityId]);\r\n\r\n    return (\r\n      <Fragment>\r\n        <Segment\r\n          textAlign=\"center\"\r\n          attached=\"top\"\r\n          inverted\r\n          color=\"black\"\r\n          style={{ border: \"none\" }}\r\n        >\r\n          <Icon name=\"wechat\" size=\"big\" />\r\n        </Segment>\r\n        <Segment attached clearing>\r\n          <Comment.Group>\r\n            {comments.map((comment) => (\r\n              <Comment key={comment.id}>\r\n                <Comment.Avatar src={comment.image || \"/assets/user.jpg\"} />\r\n                <Comment.Content>\r\n                  <Comment.Author as={Link} to={`/profile/${comment.userName}`}>\r\n                    {comment.displayedName}\r\n                  </Comment.Author>\r\n                  <Comment.Metadata>\r\n                    <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                  </Comment.Metadata>\r\n                  <Comment.Text>{comment.body}</Comment.Text>\r\n                </Comment.Content>\r\n              </Comment>\r\n            ))}\r\n            <Formik\r\n              onSubmit={(values, { resetForm }) =>\r\n                addComment(values).then(() => resetForm())\r\n              }\r\n              initialValues={{ body: \"\" }}\r\n              validationSchema={Yup.object({\r\n                body: Yup.string().required(),\r\n              })}\r\n            >\r\n              {({ isSubmitting, isValid, handleSubmit }) => (\r\n                <Form className=\"ui form\">\r\n                  <Field name=\"body\">\r\n                    {(props: FieldProps) => (\r\n                      <div style={{ position: \"relative\" }}>\r\n                        <Loader active={isSubmitting} />\r\n                        <textarea\r\n                          style={{ marginTop: \"15px\" }}\r\n                          placeholder=\"Add comment\"\r\n                          rows={2}\r\n                          {...props.field}\r\n                          onKeyPress={(e) => {\r\n                            if (e.key === \"Enter\" && e.shiftKey) {\r\n                              return;\r\n                            }\r\n\r\n                            if (e.key === \"Enter\" && !e.shiftKey) {\r\n                              e.preventDefault();\r\n                              isValid && handleSubmit();\r\n                            }\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </Field>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </Comment.Group>\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Grid, Icon, Segment } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../App/models/activity\";\r\nimport { useStore } from \"../../../App/stores/Store\"\r\n\r\ninterface IProps {\r\n  activity: IActivity;\r\n}\r\n\r\nexport const ActivityDetailedInfo: React.FC<IProps> = observer(\r\n  ({ activity }) => {\r\n    const { activityStore } = useStore();\r\n    const { modifyDayOfTheWeekToString, modifyMonthToString } = activityStore;\r\n    return (\r\n      <Segment.Group>\r\n        <Segment attached=\"top\">\r\n          <Grid>\r\n            <Grid.Column width={1}>\r\n              <Icon size=\"large\" color=\"black\" name=\"info\" />\r\n            </Grid.Column>\r\n            <Grid.Column width={15}>\r\n              <p>{activity.description}</p>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n        <Segment attached>\r\n          <Grid verticalAlign=\"middle\">\r\n            <Grid.Column width={1}>\r\n              <Icon name=\"calendar\" size=\"large\" color=\"black\" />\r\n            </Grid.Column>\r\n            <Grid.Column width={15}>\r\n              <span>\r\n                {modifyMonthToString(activity)} {activity.date!.getDate()},{\" \"}\r\n                {modifyDayOfTheWeekToString(activity)}\r\n              </span>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n        <Segment attached>\r\n          <Grid verticalAlign=\"middle\">\r\n            <Grid.Column width={1}>\r\n              <Icon name=\"marker\" size=\"large\" color=\"black\" />\r\n            </Grid.Column>\r\n            <Grid.Column width={11}>\r\n              <span>\r\n                {activity.venue}, {activity.city}\r\n              </span>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n      </Segment.Group>\r\n    );\r\n  }\r\n);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  Item,\r\n  Label,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../App/models/activity\";\r\nimport { useStore } from \"../../../App/stores/Store\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(30%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\ninterface IProps {\r\n  activity: IActivity;\r\n}\r\n\r\nexport const ActivityDetailedHeader: React.FC<IProps> = observer(\r\n  ({ activity }) => {\r\n    const { activityStore } = useStore();\r\n    const {\r\n      loading,\r\n      target,\r\n      submitting,\r\n      deleteActivity,\r\n      cancelActivity,\r\n    } = activityStore;\r\n    const [isMouseOver, setIsMouseOver] = useState(false);\r\n    const host = activity.attendees.filter((x) => x.isHost)[0];\r\n    const { attendActivity, cancelAttendance } = activityStore;\r\n\r\n    const determineFunctionToCall = () => {\r\n      activity.isGoing ? cancelAttendance() : attendActivity();\r\n    };\r\n\r\n    return (\r\n      <Segment.Group>\r\n        <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n          {activity.isCancelled && (\r\n            <Label\r\n              style={{ position: \"absolute\", zIndex: 1000, left: -14, top: 20 }}\r\n              ribbon\r\n              color=\"red\"\r\n              content=\"Cancelled\"\r\n            />\r\n          )}\r\n          <Image\r\n            src={`/assets/categories/${activity.category}.jpg`}\r\n            fluid\r\n            style={activityImageStyle}\r\n          />\r\n          <Segment basic style={activityImageTextStyle}>\r\n            <Item.Group>\r\n              <Item>\r\n                <Item.Content>\r\n                  <Header\r\n                    size=\"huge\"\r\n                    content={activity.title}\r\n                    style={{ color: \"white\" }}\r\n                  />\r\n                  <p>\r\n                    Hosted by{\" \"}\r\n                    <Link to={`/profile/${host.userName}`}>\r\n                      <strong>{host.displayedName}</strong>\r\n                    </Link>\r\n                  </p>\r\n                </Item.Content>\r\n              </Item>\r\n            </Item.Group>\r\n          </Segment>\r\n        </Segment>\r\n        <Segment clearing attached=\"bottom\">\r\n          {!activity.isHost && (\r\n            <Button\r\n              loading={loading}\r\n              onMouseOver={() => setIsMouseOver(true)}\r\n              onMouseOut={() => setIsMouseOver(false)}\r\n              onClick={determineFunctionToCall}\r\n              icon\r\n              circular\r\n              color=\"black\"\r\n            >\r\n              <Icon name={activity.isGoing ? \"times\" : \"check\"} />\r\n            </Button>\r\n          )}\r\n          <span\r\n            style={{\r\n              display: `${isMouseOver ? \"inline-block\" : \"none\"}`,\r\n              marginLeft: \"10px\",\r\n            }}\r\n          >\r\n            {!activity.isGoing ? (\r\n              <strong>Join Activity</strong>\r\n            ) : (\r\n              <strong>Cancel Attendee</strong>\r\n            )}\r\n          </span>\r\n          {activity.isHost && (\r\n            <Fragment>\r\n              <Button\r\n                as={Link}\r\n                to={`/manage/${activity.id}`}\r\n                circular\r\n                icon\r\n                disabled={activity.isCancelled}\r\n                floated=\"right\"\r\n              >\r\n                <Icon name=\"settings\" />\r\n              </Button>\r\n              <Button\r\n                name={activity.id}\r\n                loading={target === activity.id && submitting}\r\n                onClick={(e) => deleteActivity(e, activity.id!)}\r\n                floated=\"right\"\r\n                icon\r\n                circular\r\n              >\r\n                <Icon name=\"trash\" />\r\n              </Button>\r\n              <Button\r\n                name=\"cancel\"\r\n                loading={target === \"cancel\" && submitting}\r\n                onClick={(e) => cancelActivity(e)}\r\n                floated=\"right\"\r\n                icon\r\n                circular\r\n              >\r\n                <Icon name={!activity.isCancelled ? \"cancel\" : \"check\"} />\r\n              </Button>\r\n            </Fragment>\r\n          )}\r\n        </Segment>\r\n      </Segment.Group>\r\n    );\r\n  }\r\n);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Image, Item, Label, List, Segment } from \"semantic-ui-react\";\r\nimport { IAttendee } from \"../../../App/models/activity\";\r\n\r\ninterface IProps {\r\n  attendees: IAttendee[];\r\n}\r\n\r\nexport const ActivityDetailedSidebar: React.FC<IProps> = observer(\r\n  ({ attendees }) => {\r\n    return (\r\n      <Fragment>\r\n        <Segment\r\n          textAlign=\"center\"\r\n          style={{ border: \"none\" }}\r\n          attached=\"top\"\r\n          secondary\r\n          inverted\r\n          color=\"black\"\r\n        >\r\n          {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"}{\" \"}\r\n          going\r\n        </Segment>\r\n        <Segment attached>\r\n          <List relaxed divided>\r\n            {attendees.map((attendee) => (\r\n              <Item key={attendee.userName} style={{ position: \"relative\" }}>\r\n                {attendee.isHost && (\r\n                  <Label\r\n                    style={{ position: \"absolute\" }}\r\n                    color=\"black\"\r\n                    ribbon=\"right\"\r\n                  >\r\n                    Host\r\n                  </Label>\r\n                )}\r\n                <Image\r\n                  circular\r\n                  size=\"mini\"\r\n                  src={attendee.mainImage || \"/assets/user.jpg\"}\r\n                  style={{ marginRight: \"10px\" }}\r\n                />\r\n                <Item.Content verticalAlign=\"middle\">\r\n                  <Item.Header as=\"h3\">\r\n                    <Link to={`/profile/${attendee.userName}`}>\r\n                      {attendee.displayedName}\r\n                    </Link>\r\n                  </Item.Header>\r\n                  {attendee.isFollowing && (\r\n                    <Item.Extra style={{ color: \"black\" }}>Friend</Item.Extra>\r\n                  )}\r\n                </Item.Content>\r\n              </Item>\r\n            ))}\r\n          </List>\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n);\r\n","import { Segment, Button, Header, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStore } from \"../stores/Store\";\r\n\r\nexport const NotFound = () => {\r\n  const { userStore } = useStore();\r\n\r\n  return (\r\n    <Segment placeholder textAlign=\"center\">\r\n      <Header icon>\r\n        <Icon name=\"heartbeat\" />\r\n        Oops! Page Not Found\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button\r\n          as={Link}\r\n          to={userStore.user ? \"/activities\" : \"/\"}\r\n          color=\"black\"\r\n        >\r\n          Go back\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const GoToPreviousPageButton: React.FC = () => {\r\n  let history = useHistory();\r\n  return (\r\n    <Button\r\n      icon\r\n      onClick={() => history.push(\"/activities\")}\r\n      style={{ marginBottom: \"10px\", cursor: \"pointer\" }}\r\n      basic\r\n    >\r\n      <Icon name=\"arrow alternate circle left outline\" size=\"big\" />\r\n    </Button>\r\n  );\r\n};\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { LoadingComponent } from \"../../../App/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../App/stores/Store\";\r\nimport { ActivityDetailedChat } from \"./ActivityDetailedChat\";\r\nimport { ActivityDetailedInfo } from \"./ActivityDetailedInfo\";\r\nimport { ActivityDetailedHeader } from \"./ActivityDetailedHeader\";\r\nimport { ActivityDetailedSidebar } from \"./ActivityDetailedSidebar\";\r\nimport { NotFound } from \"../../../App/layout/NotFound\";\r\nimport { GoToPreviousPageButton } from \"../../buttons/GoToPreviousPageButton\";\r\n\r\nexport const ActivityDetails: React.FC = observer(() => {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    activity,\r\n    loadActivity,\r\n    loadingInitial,\r\n    clearActivity,\r\n  } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id);\r\n\r\n    return () => clearActivity();\r\n  }, [id, loadActivity, clearActivity]);\r\n\r\n  if (loadingInitial) return <LoadingComponent />;\r\n\r\n  if (!activity) return <NotFound />;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <GoToPreviousPageButton />\r\n      <Grid>\r\n        <Grid.Column width={10}>\r\n          <ActivityDetailedHeader activity={activity} />\r\n          <ActivityDetailedInfo activity={activity} />\r\n          <ActivityDetailedChat activityId={activity.id!} />\r\n        </Grid.Column>\r\n        <Grid.Column width={6}>\r\n          <ActivityDetailedSidebar attendees={activity.attendees} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/Store\";\r\n\r\nexport const ModalContainer = observer(() => {\r\n  const { modalStore } = useStore();\r\n  const {\r\n    modal: { open, body },\r\n    closeModal,\r\n  } = modalStore;\r\n  return (\r\n    <Modal open={open} onClose={closeModal}>\r\n      <Modal.Content>{body}</Modal.Content>\r\n    </Modal>\r\n  );\r\n});\r\n","import React, { SyntheticEvent } from \"react\";\r\nimport { IProfile } from \"../../App/models/profile\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Reveal, Button } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../App/stores/Store\";\r\n\r\ninterface IProps {\r\n  profile: IProfile;\r\n}\r\n\r\nexport const FollowButton: React.FC<IProps> = observer(({ profile }) => {\r\n  const { profileStore, userStore } = useStore();\r\n  const { updateFollowing, loadingFollow } = profileStore;\r\n\r\n  if (\r\n    userStore.user &&\r\n    profile &&\r\n    userStore.user.userName! === profile.userName!\r\n  )\r\n    return null;\r\n\r\n  const handleFollow = (e: SyntheticEvent, username: string) => {\r\n    e.preventDefault();\r\n    profile.isFollowing\r\n      ? updateFollowing(username, false)\r\n      : updateFollowing(username, true);\r\n  };\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          color=\"black\"\r\n          content={profile?.isFollowing ? \"Following\" : \"Not Following\"}\r\n        />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden>\r\n        <Button\r\n          fluid\r\n          basic\r\n          colour={profile?.isFollowing ? \"gray\" : \"black\"}\r\n          content={profile?.isFollowing ? \"Unfollow\" : \"Follow\"}\r\n          loading={loadingFollow}\r\n          onClick={(e) => handleFollow(e, profile?.userName)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport {\r\n  Segment,\r\n  Item,\r\n  Header,\r\n  Grid,\r\n  Statistic,\r\n  Divider,\r\n} from \"semantic-ui-react\";\r\nimport { IProfile } from \"../../App/models/profile\";\r\nimport { FollowButton } from \"../profiles/FollowButton\";\r\n\r\ninterface IProps {\r\n  profile: IProfile | null;\r\n}\r\n\r\nexport const ProfileHeader: React.FC<IProps> = observer(({ profile }) => {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size=\"small\"\r\n                src={profile?.mainImage || \"/assets/user.jpg\"}\r\n                circular\r\n              />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\">{profile?.displayedName}</Header>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label=\"Followers\" value={profile?.followersCount || 0} />\r\n            <Statistic\r\n              label=\"Following\"\r\n              value={profile?.followingsCount || 0}\r\n            />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          <FollowButton profile={profile!} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n});\r\n","import { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\n\r\ninterface IProps {\r\n  setFiles: (files: object[]) => void;\r\n}\r\n\r\nconst dropzoneStyles = {\r\n  border: \"dashed 3px\",\r\n  borderColor: \"#eee\",\r\n  borderRadius: \"5px\",\r\n  paddingTop: \"30px\",\r\n  textAlign: \"center\" as \"center\",\r\n  height: \"200px\",\r\n};\r\n\r\nconst dropzoneActive = {\r\n  borderColor: \"green\",\r\n};\r\n\r\nexport const UploadPhotoDropzone: React.FC<IProps> = ({ setFiles }) => {\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    setFiles(\r\n      acceptedFiles.map((file: object) =>\r\n        Object.assign(file, {\r\n          preview: URL.createObjectURL(file),\r\n        })\r\n      )\r\n    );\r\n  }, [setFiles]);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={\r\n        isDragActive ? { ...dropzoneStyles, ...dropzoneActive } : dropzoneStyles\r\n      }\r\n    >\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header content=\"Drop image here\" />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Cropper } from \"react-cropper\";\r\nimport 'cropperjs/dist/cropper.css'\r\n\r\ninterface IProps {\r\n  setCropper: (Cropper: Cropper) => void;\r\n  imagePreview: string;\r\n}\r\n\r\nexport const UploadPhotoCropper: React.FC<IProps> = ({\r\n  setCropper,\r\n  imagePreview,\r\n}) => {\r\n  return (\r\n    <Cropper\r\n      src={imagePreview}\r\n      style={{ height: 200, width: \"100%\" }}\r\n      initialAspectRatio={1}\r\n      preview=\".img-preview\"\r\n      guides={false}\r\n      viewMode={1}\r\n      autoCropArea={1}\r\n      background={false}\r\n      onInitialized={cropper => setCropper(cropper)}\r\n    />\r\n  );\r\n};\r\n","import { Fragment, useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header, Icon } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { UploadPhotoDropzone } from \"./UploadPhotoDropzone\";\r\nimport { UploadPhotoCropper } from \"./UploadPhotoCropper\";\r\n\r\ninterface IProps {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport const UploadPhotoWidget: React.FC<IProps> = observer(\r\n  ({ uploadPhoto, loading }) => {\r\n    console.log(loading);\r\n    const [files, setFiles] = useState<any[]>([]);\r\n    const [cropper, setCropper] = useState<Cropper | null>(null);\r\n\r\n    const onCrop = () => {\r\n      if (cropper) {\r\n        cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\r\n      }\r\n    };\r\n\r\n    useEffect(() => {\r\n      return () => {\r\n        files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n      };\r\n    }, [files]);\r\n\r\n    return (\r\n      <Fragment>\r\n        <Grid>\r\n          <Grid.Column width={4}>\r\n            <Header color=\"teal\" sub content=\"Step 1 - Add Photo\" />\r\n            <UploadPhotoDropzone setFiles={setFiles} />\r\n          </Grid.Column>\r\n          <Grid.Column width={1} />\r\n          <Grid.Column width={4}>\r\n            <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\r\n            {files && files.length > 0 && (\r\n              <UploadPhotoCropper\r\n                setCropper={setCropper}\r\n                imagePreview={files[0].preview}\r\n              />\r\n            )}\r\n          </Grid.Column>\r\n          <Grid.Column width={1} />\r\n          <Grid.Column width={4}>\r\n            <Header sub color=\"teal\" content=\"Step 3 - Preview & Upload\" />\r\n            {files && files.length > 0 && (\r\n              <Fragment>\r\n                <div\r\n                  className=\"img-preview\"\r\n                  style={{ minHeight: 200, overflow: \"hidden\" }}\r\n                ></div>\r\n                <Button.Group widths={2}>\r\n                  <Button\r\n                    animated=\"fade\"\r\n                    secondary\r\n                    loading={loading}\r\n                    onClick={onCrop}\r\n                  >\r\n                    <Button.Content visible>\r\n                      <Icon name=\"check\" />\r\n                    </Button.Content>\r\n                    <Button.Content hidden>Upload</Button.Content>\r\n                  </Button>\r\n                  <Button\r\n                    animated=\"fade\"\r\n                    disabled={loading}\r\n                    onClick={() => setFiles([])}\r\n                  >\r\n                    <Button.Content visible>\r\n                      <Icon name=\"close\" />\r\n                    </Button.Content>\r\n                    <Button.Content hidden>Cancel</Button.Content>\r\n                  </Button>\r\n                </Button.Group>\r\n              </Fragment>\r\n            )}\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Fragment>\r\n    );\r\n  }\r\n);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useState } from \"react\";\r\nimport { Card, Header, Tab, Image, Button, Grid } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../App/stores/Store\";\r\nimport { UploadPhotoWidget } from \"../photoUpload/UploadPhotoWidget\";\r\n\r\nexport const ProfilePhotos = observer(() => {\r\n  const { profileStore } = useStore();\r\n    const {\r\n    profile,\r\n    isCurrentUser,\r\n    uploadPhoto,\r\n    uploading,\r\n    setMainPhoto,\r\n    deletePhoto,\r\n    loadingSetMain,\r\n    loadingDelete\r\n  } = profileStore;\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState<string | null>(null);\r\n  const [deleteTarget, setDeleteTarget] = useState<string | null>(null);\r\n\r\n  const handleUploadPhoto = (file: Blob) => {\r\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16} style={{ paddingBottom: \"0\" }}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              icon={!addPhotoMode ? \"photo\" : \"close\"}\r\n              basic\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <UploadPhotoWidget\r\n              uploadPhoto={handleUploadPhoto}\r\n              loading={uploading}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile &&\r\n                profile.photos.map((photo) => (\r\n                  <Card key={photo.id}>\r\n                    <Image src={photo.url} />\r\n                    {isCurrentUser && (\r\n                      <Button.Group fluid width={2}>\r\n                        <Button\r\n                          name={photo.id}\r\n                          colour=\"gray\"\r\n                          loading={loadingSetMain && target === photo.id}\r\n                          content=\"Main\"\r\n                          onClick={(e) => {\r\n                            setMainPhoto(photo);\r\n                            setTarget(e.currentTarget.name);\r\n                          }}\r\n                          disabled={photo.isMain}\r\n                        />\r\n                        <Button\r\n                          name={photo.id}\r\n                          disabled={photo.isMain}\r\n                          color=\"black\"\r\n                          icon=\"trash\"\r\n                          onClick={(e) => {\r\n                            deletePhoto(photo);\r\n                            setDeleteTarget(e.currentTarget.name);\r\n                          }}\r\n                          loading={loadingDelete && deleteTarget === photo.id}\r\n                        />\r\n                      </Button.Group>\r\n                    )}\r\n                  </Card>\r\n                ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"../../App/stores/Store\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { ProfileCard } from \"./ProfileCard\";\r\n\r\nexport const ProfileFollowings = observer(() => {\r\n  const { profileStore } = useStore();\r\n  const {\r\n    profile,\r\n    followings,\r\n    loadingFollowingsList,\r\n    activeTab,\r\n  } = profileStore;\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingFollowingsList}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={\r\n              activeTab === 3\r\n                ? `People following ${profile?.displayedName}`\r\n                : `People ${profile?.displayedName} is following`\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={4}>\r\n            {followings.map((profile) => (\r\n              <ProfileCard key={profile?.userName} profile={profile!} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React, { SyntheticEvent, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IUserActivity } from \"../../App/models/profile\";\r\nimport { format } from \"date-fns\";\r\nimport { useStore } from \"../../App/stores/Store\";\r\n\r\nconst panes = [\r\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\r\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\r\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\r\n];\r\n\r\nexport const ProfileActivities = observer(() => {\r\n  const { profileStore } = useStore();\r\n  const {\r\n    loadUserActivities,\r\n    profile,\r\n    loadingActivities,\r\n    userActivities,\r\n  } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadUserActivities(profile!.userName);\r\n  }, [loadUserActivities, profile]);\r\n\r\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadUserActivities(\r\n      profile!.userName,\r\n      panes[data.activeIndex as number].pane.key\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingActivities}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userActivities.map((activity: IUserActivity) => (\r\n              <Card\r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n                key={activity.id}\r\n              >\r\n                <Image\r\n                  src={`/assets/categories/${activity.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\r\n                  <Card.Meta textAlign=\"center\">\r\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\r\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { Tab } from \"semantic-ui-react\";\r\nimport { ProfilePhotos } from \"./ProfilePhotos\";\r\nimport { ProfileFollowings } from \"./ProfileFollowings\";\r\nimport { useStore } from \"../../App/stores/Store\";\r\nimport { ProfileActivities } from \"./ProfileActivities\";\r\n\r\nconst panes = [\r\n  { menuItem: \"About\", render: () => <Tab.Pane>About</Tab.Pane> },\r\n  { menuItem: \"Photos\", render: () => <ProfilePhotos /> },\r\n  { menuItem: \"Activities\", render: () => <ProfileActivities /> },\r\n  { menuItem: \"Followers\", render: () => <ProfileFollowings /> },\r\n  { menuItem: \"Following\", render: () => <ProfileFollowings /> },\r\n];\r\n\r\nexport const ProfileContent = () => {\r\n  const { profileStore } = useStore();\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n};\r\n","import { Grid } from \"semantic-ui-react\";\r\nimport { ProfileHeader } from \"./ProfileHeader\";\r\nimport { ProfileContent } from \"./ProfileContent\";\r\nimport { useStore } from \"../../App/stores/Store\";\r\nimport { Fragment, useEffect } from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { LoadingComponent } from \"../../App/layout/LoadingComponent\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { GoToPreviousPageButton } from \"../buttons/GoToPreviousPageButton\";\r\n\r\ninterface RouteParams {\r\n  username: string;\r\n}\r\n\r\ninterface IProps extends RouteComponentProps<RouteParams> {}\r\n\r\nexport const ProfilePage: React.FC<IProps> = observer(({ match }) => {\r\n  const { profileStore } = useStore();\r\n  const { loadingProfile, profile, loadProfile, setActiveTab } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(match.params.username);\r\n\r\n    return () => setActiveTab(0);\r\n  }, [loadProfile, match, setActiveTab]);\r\n\r\n  if (loadingProfile) return <LoadingComponent />;\r\n\r\n  return (\r\n    <Fragment>\r\n      <GoToPreviousPageButton />\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <ProfileHeader profile={profile} />\r\n          <ProfileContent />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n});\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nexport default function useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}","import React from \"react\";\r\nimport useQuery from \"../../App/common/utils/hooks\";\r\nimport { Segment, Header, Icon, Button } from \"semantic-ui-react\";\r\nimport { User } from \"../../App/api/agent\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const RegisterSuccess: React.FC = () => {\r\n  const email = useQuery().get(\"email\") as string;\r\n\r\n  const handleConfirmEmailResend = () => {\r\n    User.resendEmailVerification(email)\r\n      .then(() => {\r\n        toast.success(\"Verification email resent - please check your email\");\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <Segment placeholder textAlign=\"center\">\r\n      <Header icon>\r\n        <Icon name=\"check\" />\r\n        Successfully registered!\r\n      </Header>\r\n      <p>Please check your email for the verification</p>\r\n      {email && (\r\n        <React.Fragment>\r\n          <p>Didn't recieve the email? Please click below button to resend</p>\r\n          <Button\r\n            onClick={handleConfirmEmailResend}\r\n            secondary\r\n            content=\"Resend email\"\r\n            size=\"big\"\r\n          />\r\n        </React.Fragment>\r\n      )}\r\n    </Segment>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useStore } from \"../../App/stores/Store\";\r\nimport { User } from \"../../App/api/agent\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport useQuery from \"../../App/common/utils/hooks\";\r\nimport { useHistory } from \"react-router\";\r\nimport { ActivityList } from \"../activities/dashboard/ActivityList\";\r\n\r\nexport const VerifyEmail = () => {\r\n  const { userStore } = useStore();\r\n  const Status = {\r\n    Verifying: \"Verifying\",\r\n    Failed: \"Failed\",\r\n    Success: \"Success\",\r\n  };\r\n\r\n  const [status, setStatus] = useState(Status.Verifying);\r\n  const history = useHistory();\r\n  const token = useQuery().get(\"token\") as string;\r\n  const email = useQuery().get(\"email\") as string;\r\n\r\n  useEffect(() => {\r\n    User.verifyEmail(token as string, email as string)\r\n      .then(() => {\r\n        setStatus(Status.Success);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setStatus(Status.Failed);\r\n      });\r\n  }, [Status.Failed, Status.Success, token, email]);\r\n\r\n  const handleConfirmEmailResend = () => {\r\n    User.resendEmailVerification(email as string)\r\n      .then(() => {\r\n        toast.success(\"Verification email resent - please check your email\");\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const getBody = () => {\r\n    switch (status) {\r\n      case Status.Verifying:\r\n        return <p>Verifying...</p>;\r\n      case Status.Failed:\r\n        return (\r\n          <div className=\"center\">\r\n            <p>Verifaction failed - you can try resending the verification</p>\r\n            <Button\r\n              secondary\r\n              size=\"big\"\r\n              content=\"Resend email\"\r\n              onClick={handleConfirmEmailResend}\r\n            />\r\n          </div>\r\n        );\r\n      case Status.Success:\r\n        return (\r\n          <div className=\"center\">\r\n            <p>Email has been varified - you can now login</p>\r\n            {!userStore.user ? (\r\n              <Button\r\n                secondary\r\n                onClick={() => history.push(\"/\")}\r\n                size=\"large\"\r\n                content=\"Go back\"\r\n              />\r\n            ) : (\r\n              <p style={{ textAlign: \"center\" }}>You are already logged in</p>\r\n            )}\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"envelope\" />\r\n        Email verification\r\n      </Header>\r\n\r\n      <Segment.Inline>{getBody()}</Segment.Inline>\r\n    </Segment>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { NavBar } from \"../../Features/nav/NavBar\";\r\nimport { ActivityDashboard } from \"../../Features/activities/dashboard/ActivityDashboard\";\r\nimport { Route, Switch, useLocation, withRouter } from \"react-router-dom\";\r\nimport { HomePage } from \"../../Features/home/HomePage\";\r\nimport { ActivityForm } from \"../../Features/activities/form/ActivityForm\";\r\nimport { ActivityDetails } from \"../../Features/activities/details/ActivityDetails\";\r\nimport { NotFound } from \"./NotFound\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { useStore } from \"../stores/Store\";\r\nimport { ModalContainer } from \"../common/modals/ModalContainer\";\r\nimport { ProfilePage } from \"../../Features/profiles/ProfilePage\";\r\nimport { LoadingComponent } from \"./LoadingComponent\";\r\nimport { RegisterSuccess } from \"../../Features/user/RegisterSuccess\";\r\nimport { VerifyEmail } from \"../../Features/user/VerifyEmail\";\r\n\r\nconst App: React.FC = () => {\r\n  const { commonStore, userStore } = useStore();\r\n  const { getUser, loadingUser, getFacebookLoginStatus } = userStore;\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (commonStore.token) {\r\n      getUser().finally(() => commonStore.setAppLoaded());\r\n    } else {\r\n      getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\r\n    }\r\n  }, [getUser, commonStore, getFacebookLoginStatus]);\r\n\r\n  if (loadingUser) return <LoadingComponent />;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ModalContainer />\r\n      <ToastContainer position=\"bottom-right\" />\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <Route\r\n        path={\"/(.+)\"}\r\n        render={() => (\r\n          <React.Fragment>\r\n            <NavBar />\r\n            <Container style={{ marginTop: \"5em\" }}>\r\n              <Switch>\r\n                <Route exact path=\"/activities\" component={ActivityDashboard} />\r\n                <Route path=\"/activities/:id\" component={ActivityDetails} />\r\n                <Route\r\n                  key={location.key}\r\n                  path={[\"/createActivity\", \"/manage/:id\"]}\r\n                  component={ActivityForm}\r\n                />\r\n                <Route\r\n                  path=\"/profile/:username\"\r\n                  component={ProfilePage}\r\n                ></Route>\r\n                <Route\r\n                  path=\"/user/registerSuccess\"\r\n                  component={RegisterSuccess}\r\n                />\r\n                <Route path=\"/user/verifyEmail\" component={VerifyEmail} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </React.Fragment>\r\n        )}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(App);\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from 'react'\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nconst ScrollToTop = ({ children, location: { pathname } }: any) => {\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    return children;\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import ReactDOM from \"react-dom\";\r\nimport { Router } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"./App/layout/styles.css\";\r\nimport App from \"./App/layout/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport ScrollToTop from \"./App/layout/ScrollToTop\";\r\nimport { store, StoreContext } from \"./App/stores/Store\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <Router history={history}>\r\n    <ScrollToTop>\r\n      <StoreContext.Provider value={store}>\r\n        <App />\r\n      </StoreContext.Provider>\r\n    </ScrollToTop>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}